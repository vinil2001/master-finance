@model Finance.klt

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Новый</h2>
<div>@ViewBag.NameConsist</div>
@using (Html.BeginForm(null, null, FormMethod.Post, new { id = "CreateKltForm" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Плательщик</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.name, "Название", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.name, "", new { @class = "text-danger" })
            </div>
        </div>

        @*<div class="form-group">
            @Html.LabelFor(model => model.OwneshipTypeId, "Форма собственности", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("OwneshipTypeId", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.OwneshipTypeId, "", new { @class = "text-danger" })
            </div>
        </div>*@

        <div class="form-group">
            @Html.LabelFor(model => model.full, "Название полностью", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.full, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.full, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.nds, "Плательщик НДС", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.DropDownList("ndsDropDown", new SelectList(new string[] { "Да", "Нет" }), "Выберите значение")
                    @*@Html.DropDownList("nds", new SelectList(new List<SelectListItem> {
                        new SelectListItem { Selected = true, Value = "1", Text = "Да" },
                        new SelectListItem { Selected = false, Value = "0", Text = "Нет"}
                     }), "Выберите значение")*@
                    <input hidden name="nds" id="nds" value="Выберите значение" />
                    <script>
                        $("#ndsDropDown").on("change", function () {
                            if ($("#ndsDropDown").val() == "Нет")
                                $("#nds").val(0)
                            else if ($("#ndsDropDown").val() == "Да")
                                $("#nds").val(1);
                            else
                                $("#nds").val('Выберите значение');
                        })
                    </script>
                    @*@Html.DropDownListFor(model => model.nds, ViewBag.nds as SelectList, "Выберите значение ")*@
                    @Html.ValidationMessageFor(model => model.nds, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.knds, "ИНН", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.knds, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.knds, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group" name="divVATCertificateNumber">
            @Html.LabelFor(model => model.snds, "Номер свидетельсва плательщика НДС", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.snds, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.snds, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.bank, "Банк", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.bank, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.bank, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.chet, "Номер счета", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.chet, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.chet, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.mfob, "МФО", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.mfob, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.mfob, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.okpo, "ЄДРПОУ", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.okpo, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.okpo, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.adur, "Юр.Адрес", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.adur, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.adur, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.adft, "Физ.Адрес", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.adft, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.adft, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.telf, "Номер тел.", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.telf, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.telf, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.cont, "Контактное лицо", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.cont, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.cont, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.comt, "Комментарий", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.comt, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.comt, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.per, "Скидка %", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.per, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.per, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input id="submitButton" type="submit" value="Создать" class="btn btn-default" />
            </div>
        </div>
    </div>
}
    <div>
        @Html.ActionLink("Назад", null, null, null, new { href = Request.UrlReferrer })
        @*@Html.ActionLink("Назад", "Index")*@
    </div>
<script>
    $('div[name=divVATCertificateNumber]').hide();
    $("#VATPayer").on('change', function () {
        //alert("onChange" + $("#VATPayer").prop("checked"));
        if ($("#VATPayer").prop("checked") == true) {
            $('div[name=divVATCertificateNumber]').show();
            //alert("show: " + $("#VATPayer").is("checked"));
        }
        else {
            //$('div[name=divVATCertificateNumber]').hide();
            $("#VATCertificateNumber").val("");
            alert($("#VATCertificateNumber").val);
            //alert("hide");
        }

    })
</script>
<script>
    $("#CreateKltForm").on("submit", function (event) {
        event.preventDefault();
        var CompanyName = $('#name').val();
        var searchRes = $.each(SearchResult, function (item, value) {
            if (value.label == CompanyName) {
                alert('Такая компания уже существует. Введите новое название');
                return true;
            }
        })
        let ndsValue = $("#nds").val();
        if (ndsValue != 0 && ndsValue != 1) {
            alert('Выберите значение плательщика НДС.');
            return;
        }

        if (searchRes[0] != null)
            return;

        var $this = $(this);
        var frmValues = $this.serialize();
        $.ajax({
            type: $this.attr('method'),
            url: $this.attr('action'),
            data: frmValues,
            success: function (result) {

                    $("#windowContent").html('');
                    $("#modalWindow").fadeOut();

                    //alert(result.Id);
                    //alert(result.Name);
                    $("#Counterparty_name").val(result.Name);
                    $("#KltId").val(result.Id);

            },
            error: function () {
                alert('error CreateKltForm');
            }
        })

       
    });
</script>


<script type="text/javascript">
    var SearchResult;

    $(document).ready(function () {
        $("#name").autocomplete({
            source: function (request, response) {
                $.ajax({
                    url: '/Counterparties/SearchAutocomplete/',
                    type: "POST", //Типа HTML-запроса
                    dataType: "json",
                    data: {
                        request: request.term,
                    },
                    success: function (data) {
                        SearchResult = $.map(data, function (item) {
                            return { label: item.Name, id: item.Id, TypeDb: item.TypeDb };
                        });
                       
                        response(SearchResult);
                    },
                    error: function () {
                        alert("Выберите название компании из выпадающего списка в поле 'Компания'. Для того что бы создать новую компанию нажмите на '+'")
                    }
                })
            },
            select: function (event, ui) {
                alert('Такая компания уже существует. Введите новое название');
                //$('#Counterparty_Id').val(ui.item.id);
                //$('#CounterpartyTypeDb').val(ui.item.TypeDb);
            }
        });

    })
</script>

@*<script>
        function SendPost() {
            $.ajax({
                url: '/Counterparties/Create',
                type: "POST",
                dataType: 'json',
                contentType: 'application/json; charset=utf-8',
                async: true,
                processData: false,
                data: $("form").serialize(),
                success: function () {
                    //  result.appendTo$("#windowContent");
                    alert('success');

                    //$(result).appendTo("#windowContent");
                },
                error: function () {
                    alert("error");
                }
            })
        }
    </script>*@